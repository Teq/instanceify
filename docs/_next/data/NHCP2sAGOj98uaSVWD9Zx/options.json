{"pageProps":{"slug":"options","frontmatter":{"title":"Options"},"githubLink":"https://github.com/teq/serialazy/tree/master/docs/content/options.page.md","markdown":"<h1 id=\"options\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#options\"><span class=\"icon icon-link\"></span></a>Options</h1>\n<p><code>@Serialize()</code> decorator and <code>inflate</code> / <code>deflate</code> functions accept options\nwhich affect default serialization behaviour.</p>\n<h2 id=\"decorator-options\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#decorator-options\"><span class=\"icon icon-link\"></span></a>Decorator options</h2>\n<h3 id=\"down\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#down\"><span class=\"icon icon-link\"></span></a>\"down\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>type</code> and <code>property</code> serializers</p>\n</blockquote>\n<p>Defines serializer function. <code>deflate</code> options passed as a second argument.</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">down</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Coord</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">options</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=></span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #D8DEE9FF\">]</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Coord</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> x</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> y</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n</code></pre>\n<h3 id=\"up\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#up\"><span class=\"icon icon-link\"></span></a>\"up\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>type</code> and <code>property</code> serializers</p>\n</blockquote>\n<p>Defines deserializer function. <code>inflate</code> options passed as a second argument.</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">up</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">tuple</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #D8DEE9FF\">]</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">toPojo</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">})</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=></span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D08770\">assign</span><span style=\"color: #D8DEE9FF\">(</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D08770\">toPojo</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">?</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{}</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Coord</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D08770\">tuple</span><span style=\"color: #D8DEE9FF\">[</span><span style=\"color: #B48EAD\">0</span><span style=\"color: #D8DEE9FF\">]</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D08770\">tuple</span><span style=\"color: #D8DEE9FF\">[</span><span style=\"color: #B48EAD\">1</span><span style=\"color: #D8DEE9FF\">] </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">    )</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Coord</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> x</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> y</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n</code></pre>\n<h3 id=\"type\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type\"><span class=\"icon icon-link\"></span></a>\"type\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>type</code> and <code>property</code> serializers</p>\n</blockquote>\n<p>Overrides the type of serializable.</p>\n<p>Default value:</p>\n<ul>\n<li>For types: Type constructor function</li>\n<li>For properties: Value of <code>design:type</code> <a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html#metadata\">metadata</a> for given property</li>\n</ul>\n<h3 id=\"optional\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#optional\"><span class=\"icon icon-link\"></span></a>\"optional\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>property</code> serializers | <strong>Default:</strong> <code>false</code></p>\n</blockquote>\n<p>Indicates if property can be <code>undefined</code>, otherwise <code>deflate</code> / <code>inflate</code> will throw.</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Book</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">optional</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">true</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">) </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> isbn</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n</code></pre>\n<h3 id=\"nullable\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nullable\"><span class=\"icon icon-link\"></span></a>\"nullable\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>property</code> serializers | <strong>Default:</strong> <code>false</code></p>\n</blockquote>\n<p>Indicates if property can be <code>null</code>, otherwise <code>deflate</code> / <code>inflate</code> will throw.</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Book</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">nullable</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">true</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">) </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> isbn</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n</code></pre>\n<h3 id=\"name\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#name\"><span class=\"icon icon-link\"></span></a>\"name\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>property</code> serializers</p>\n</blockquote>\n<p>If defined it forces to use different property name in serialized object.</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Book</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">summary</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">) </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> description</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">book</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">assign</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Book</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">description</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">A popular-science book on cosmology</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #88C0D0\">deflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">book</span><span style=\"color: #D8DEE9FF\">))</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">deep</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #ECEFF4\">    </span><span style=\"color: #4C566A\">// NOTE: \"description\" mapped to \"summary\" in serialized object</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">summary</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">A popular-science book on cosmology</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n</code></pre>\n<h3 id=\"projection-decorator-option\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#projection-decorator-option\"><span class=\"icon icon-link\"></span></a>\"projection\" (decorator option)</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>type</code> and <code>property</code> serializers | <strong>Default:</strong> <code>\"default\"</code></p>\n</blockquote>\n<p>Forces serializer to be defined in a given projection.</p>\n<p>See <a href=\"/projections\">Projections</a> section for more details.</p>\n<h2 id=\"serialization-options\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#serialization-options\"><span class=\"icon icon-link\"></span></a>Serialization options</h2>\n<h3 id=\"projection-serialization-option\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#projection-serialization-option\"><span class=\"icon icon-link\"></span></a>\"projection\" (serialization option)</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>deflate</code> and <code>inflate</code> | <strong>Default:</strong> <code>\"default\"</code></p>\n</blockquote>\n<p>Forces serialization in given projection.</p>\n<p>See <a href=\"/projections\">Projections</a> section for more details.</p>\n<h3 id=\"fallbacktodefaultprojection\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#fallbacktodefaultprojection\"><span class=\"icon icon-link\"></span></a>\"fallbackToDefaultProjection\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>deflate</code> and <code>inflate</code> | <strong>Default:</strong> <code>true</code></p>\n</blockquote>\n<p>If type or property is not serializable in given projection\nit tries to serialize / deserialize it in <code>\"default\"</code> projection.</p>\n<p>See <a href=\"/projections\">Projections</a> section for more details.</p>\n<h3 id=\"prioritizepropserializers\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#prioritizepropserializers\"><span class=\"icon icon-link\"></span></a>\"prioritizePropSerializers\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>deflate</code> and <code>inflate</code> | <strong>Default:</strong> <code>false</code></p>\n</blockquote>\n<p>By default, if class has own serializer defined and its properties also have serializers (property bag),\nclass own serializer takes precedence over property serializers. Set option to <code>true</code> to serialize instance\nas a property bag. For recursive serialization this option applied to all nested properties.</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">down</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Coord</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=></span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #D8DEE9FF\">] </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Coord</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> x</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> y</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">assign</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Coord</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">2</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">obj1</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">deflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">obj1</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">deep</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">([</span><span style=\"color: #B48EAD\">1</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">2</span><span style=\"color: #D8DEE9FF\">])</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">obj2</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">deflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">coord</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">prioritizePropSerializers</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">true</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">obj2</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">deep</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">2</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n</code></pre>\n<h3 id=\"as\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#as\"><span class=\"icon icon-link\"></span></a>\"as\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>deflate</code></p>\n</blockquote>\n<p>Serialize instance as if it were of the given type. It completely ignores type's own serializer\nor its property serializers (if any) and uses serializer from provided type.</p>\n<p>See also: <a href=\"/pojo\">POJO</a></p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Foo</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> id</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">down</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">bar</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Bar</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=></span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">bar</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">id</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Bar</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> id</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">foo</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">assign</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Foo</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">id</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">123</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #88C0D0\">deflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">foo</span><span style=\"color: #D8DEE9FF\">))</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">deep</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">id</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">123</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #88C0D0\">deflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">foo</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">as</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">Bar</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">))</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #B48EAD\">123</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n</code></pre>\n<h3 id=\"topojo\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#topojo\"><span class=\"icon icon-link\"></span></a>\"toPojo\"</h3>\n<blockquote>\n<p><strong>Applicable to:</strong> <code>inflate</code></p>\n</blockquote>\n<p>Deserialize to plain javascript object. When deserializing a property bag, instead of creating a new\ninstance of given type, it creates an empty JS object and writes all deserialized properties there.\nIn case of recursive serialization it affects deserialization of all nested properties.</p>\n<p>See also: <a href=\"/pojo\">POJO</a></p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Foo</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> id</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">foo1</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">inflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">Foo</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">id</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">123</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">foo1</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">constructor</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">Foo</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">foo2</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">inflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">Foo</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">id</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">123</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">},</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">toPojo</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">true</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">foo2</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">constructor</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n</code></pre>"},"__N_SSG":true}