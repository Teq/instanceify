{"pageProps":{"slug":"getting-started","frontmatter":{"title":"Getting Started"},"githubLink":"https://github.com/teq/serialazy/tree/main/website/content/getting-started.page.md","markdown":"<h1 id=\"getting-started\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getting-started\"><span class=\"icon icon-link\"></span></a>Getting Started</h1>\n<p><strong>Serialazy</strong> is a serialization / data-mapping library\nwhich can be used to deflate/inflate TypeScript class instances as well as plain JS objects (<a href=\"/pojo\">POJO</a>).</p>\n<p>Features:</p>\n<ul>\n<li>Default serializers for primitive types (string, number, boolean)</li>\n<li>Support for <a href=\"/options#optional\">optional</a>, <a href=\"/options#nullable\">nullable</a> and <a href=\"/options#name\">mapped</a> properties</li>\n<li>Recursive serialization for nested data structures</li>\n<li>Property serializers <a href=\"/inheritance\">inheritance</a> (from parent class to a child)</li>\n<li>User defined serialization functions for properties and types</li>\n<li>Alternative <a href=\"/projections\">projections</a></li>\n<li><a href=\"/async\">Async</a> serialization</li>\n<li>TypeScript-friendly API based on decorators</li>\n</ul>\n<blockquote>\n<p><strong>âš  Note:</strong> Version 3.x.x introduces breaking <a href=\"/changelog#v300\">changes</a> compared to 2.x.x.</p>\n</blockquote>\n<h2 id=\"requirements\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#requirements\"><span class=\"icon icon-link\"></span></a>Requirements</h2>\n<p>Library makes use of TypeScript experimental feature which emits type metadata to the resulting JS.\nMake sure that you enabled <code>experimentalDecorators</code> and <code>emitDecoratorMetadata</code> in your <code>tsconfig.json</code>.</p>\n<h2 id=\"installation\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#installation\"><span class=\"icon icon-link\"></span></a>Installation</h2>\n<pre style=\"background: #2e3440\"><code class=\"language-shell\"><span style=\"color: #D8DEE9FF\">npm i --save serialazy</span>\n</code></pre>\n<h2 id=\"basic-usage\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#basic-usage\"><span class=\"icon icon-link\"></span></a>Basic usage</h2>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">deflate</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">inflate</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">from</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">serialazy</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">serialized</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">deflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">serializable</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">deserialized</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">inflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">SerializableType</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">serialized</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n</code></pre>\n<p>Where:</p>\n<ul>\n<li><code>serialized</code> is a JSON-compatible value which can be safely passed to <code>JSON.stringify</code></li>\n<li><code>SerializableType</code> is a constructor function for serializable type</li>\n<li><code>serializable</code> is a primitive (string, number, boolean or their \"boxed\" variants, null, undefined), or a <em>non-primitive</em> serializable</li>\n</ul>\n<p>There are 2 types of <em>non-primitive</em> serializables:</p>\n<p><strong>1. A type with custom serializer</strong></p>\n<p>Is a TS class decorated with <code>@Serialize()</code>.</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">Serialize</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">from</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">serialazy</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">// Position class serializes to a tuple: [number, number]</span>\n<span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">down</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">pos</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Position</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=></span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #D8DEE9\">pos</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">pos</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #D8DEE9FF\">]</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">up</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">tuple</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=></span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D08770\">assign</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Position</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D08770\">tuple</span><span style=\"color: #D8DEE9FF\">[</span><span style=\"color: #B48EAD\">0</span><span style=\"color: #D8DEE9FF\">]</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D08770\">tuple</span><span style=\"color: #D8DEE9FF\">[</span><span style=\"color: #B48EAD\">1</span><span style=\"color: #D8DEE9FF\">] </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Position</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> x</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> y</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n</code></pre>\n<p><strong>2. A \"property bag\"</strong></p>\n<p>Is a TS class having properties decorated with <code>@Serialize()</code>.</p>\n<ul>\n<li><em>Always</em> serializes to a plain object</li>\n<li>Can extend (inherit from) another property bag</li>\n</ul>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">Serialize</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">from</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">serialazy</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">// Shape is a \"property bag\" serializable</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Shape</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> name</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #4C566A\">// Sphere inherits property serializers from Shape</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Sphere</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">extends</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Shape</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> radius</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> position</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Position</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n</code></pre>\n<p>Above classes can be serialized / deserialized like this:</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">deflate</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">inflate</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">from</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">serialazy</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">chai</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">require</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">chai</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">expect</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">chai</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">sphere</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">assign</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Sphere</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">sphere1</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">radius</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">10</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">position</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Object</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">assign</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Position</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">3</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">5</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">serialized</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">deflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">sphere</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">serialized</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">deep</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">sphere1</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">radius</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">10</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">position</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #B48EAD\">3</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">5</span><span style=\"color: #D8DEE9FF\">]</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">deserialized</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">inflate</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">Sphere</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">serialized</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">// Deserialized sphere should be identical with the original one</span>\n<span style=\"color: #88C0D0\">expect</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">deserialized</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">to</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">deep</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">equal</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">sphere</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n</code></pre>\n<h2 id=\"serializable-base-class\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#serializable-base-class\"><span class=\"icon icon-link\"></span></a>Serializable base class</h2>\n<p>Library provides an <em>optional</em> abstract base class for serializables.\nCurrently it only provides static factory method <code>create</code> which makes instance creation more compact\nand type-safe. Above example could look like this:</p>\n<pre style=\"background: #2e3440\"><code class=\"language-ts\"><span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">Serializable</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">Serialize</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">from</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">serialazy</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #D08770\">@Serialize</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">...</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Position</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">extends</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Serializable</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">...</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Shape</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">extends</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Serializable</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">...</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Sphere</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">extends</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Shape</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">...</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">sphere</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">Sphere</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">create</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">sphere1</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">radius</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">10</span><span style=\"color: #ECEFF4\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #D8DEE9\">position</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Position</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">create</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">x</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #B48EAD\">3</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">y</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">5</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span>\n<span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #81A1C1\">...</span>\n</code></pre>"},"__N_SSG":true}